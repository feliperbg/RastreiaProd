<!doctype html>
<html lang="pt-BR">
<head>
  <meta charset="utf-8" />
  <title>Painel de Produ√ß√£o</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />

  <!-- Bootstrap e AdminLTE -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" />
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css" />
  <link rel="stylesheet" href="/css/adminlte.css" />

  <!-- jKanban -->
  <link rel="stylesheet" href="/css/jkanban.min.css">

  <style>
    /* Kanban - Apar√™ncia Profissional */
    .kanban-board {
      border-radius: 8px;
      box-shadow: 0 2px 6px rgba(0,0,0,0.1);
    }
    .kanban-title-board {
      font-weight: bold;
      font-size: 1.05rem;
      color: rgb(255, 255, 255);
      padding: 12px 16px; /* Aumentado o padding */
      border-radius: 8px 8px 0 0; /* Ajustado border-radius */
      width: 100%; /* Garante que ocupe toda largura */
      margin-bottom: 8px; /* Espa√ßo ap√≥s o t√≠tulo */
    }
    [data-id="_todo"] .kanban-title-board { background: #6c757d; }
    [data-id="_doing"] .kanban-title-board { background: #ffc107; }
    [data-id="_review"] .kanban-title-board { background: #0dcaf0; }
    [data-id="_done"] .kanban-title-board { background: #198754; }
    
    .kanban-item {
      border-radius: 6px;
      padding: 6px 8px;
      font-size: 0.9rem;
      background-color: #6c757d;
      box-shadow: 0 1px 3px rgba(0,0,0,0.05);
    }
  </style>
</head>
<body class="layout-fixed sidebar-expand-lg bg-body-tertiary">
<div class="app-wrapper">

  <!-- Header e Sidebar -->
  <%- include('partials/header.ejs') %>
  <%- include('partials/sidebar.ejs') %>

  <!-- Conte√∫do principal -->
  <main class="app-main">
    <div class="app-content">
      <div class="container-fluid">
        <div class="row">

          <!-- Kanban -->
          <div class="col-12 mb-4">
            <div class="card">
              <div class="card-header bg-dark text-white">üìå Quadro Kanban - Linhas de Produ√ß√£o</div>
              <div class="card-body">
                <div id="myKanban"></div>
              </div>
            </div>
          </div>

          <!-- Gr√°ficos -->
          <div class="col-md-6 mb-3">
            <div class="card">
              <div class="card-header bg-info text-white">üìà Etapas Finalizadas por Dia</div>
              <div class="card-body">
                <canvas id="graficoEtapas"></canvas>
              </div>
            </div>
          </div>

          <div class="col-md-6 mb-3">
            <div class="card">
              <div class="card-header bg-warning text-white">‚è± Tempo M√©dio por Etapa</div>
              <div class="card-body">
                <canvas id="graficoTempo"></canvas>
              </div>
            </div>
          </div>

          <div class="col-md-6 mb-3">
            <div class="card">
              <div class="card-header bg-danger text-white">‚ö† Status das Ordens</div>
              <div class="card-body">
                <canvas id="graficoStatus"></canvas>
              </div>
            </div>
          </div>

        </div>
      </div>
    </div>
  </main>

  <!-- Rodap√© -->
  <footer class="app-footer text-center py-3">
    <strong>&copy; 2025 Sistema de Produ√ß√£o.</strong> Todos os direitos reservados.
  </footer>
</div>

<!-- Scripts -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="/js/jkanban.min.js"></script>

<script>
  // ======= KANBAN =======
  fetch('/painel/kanban',{
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${localStorage.getItem('authToken')}`
        }
      })
    .then(res => res.json())
    .then(data => {
      if (!data.status) throw new Error(data.msg);
      new jKanban({
        element: '#myKanban',
        boards: data.boards,
        dragBoards: false,
        dragItems: false
      });
    })
    .catch(err => console.error('Erro ao carregar Kanban:', err));

  // ======= GR√ÅFICO ETAPAS FINALIZADAS =======
  fetch('/painel/etapas',{
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${localStorage.getItem('authToken')}`
        }
      })
    .then(res => res.json())
    .then(dados => {
      if (!dados.status) throw new Error(dados.msg);
      new Chart(document.getElementById('graficoEtapas'), {
        type: 'line',
        data: {
          labels: dados.etapasFinalizadas.map(d => d.dia),
          datasets: [{
            label: 'Etapas Finalizadas',
            data: dados.etapasFinalizadas.map(d => d.total),
            borderColor: '#0d6efd',
            tension: 0.4
          }]
        },
        options: { responsive: true }
      });
    })
    .catch(err => console.error('Erro ao carregar gr√°fico etapas:', err));

  // ======= GR√ÅFICO TEMPO M√âDIO POR ETAPA =======
  fetch('/painel/tempo-etapas',{
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${localStorage.getItem('authToken')}`
        }
      })
    .then(res => res.json())
    .then(dados => {
      if (!dados.status) throw new Error(dados.msg);
      new Chart(document.getElementById('graficoTempo'), {
        type: 'bar',
        data: {
          labels: dados.tempoEtapas.map(d => d.etapa),
          datasets: [{
            label: 'Tempo M√©dio (min)',
            data: dados.tempoEtapas.map(d => d.tempoMedio),
            backgroundColor: '#ffc107'
          }]
        },
        options: { responsive: true }
      });
    })
    .catch(err => console.error('Erro ao carregar gr√°fico tempo etapas:', err));

  // ======= GR√ÅFICO STATUS DAS ORDENS =======
  fetch('/painel/status-ordens',{
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${localStorage.getItem('authToken')}`
        }
      })
    .then(res => res.json())
    .then(dados => {
      if (!dados.status) throw new Error(dados.msg);
      new Chart(document.getElementById('graficoStatus'), {
        type: 'doughnut',
        data: {
          labels: ['No Prazo', 'Atrasadas'],
          datasets: [{
            data: [dados.statusOrdens.noPrazo, dados.statusOrdens.atrasadas],
            backgroundColor: ['#198754', '#dc3545']
          }]
        },
        options: { responsive: true }
      });
    })
    .catch(err => console.error('Erro ao carregar gr√°fico status ordens:', err));
</script>
</body>
</html>
